{
	"name": "github-repository-manager",
	"publisher": "henriqueBruno",
	"displayName": "GitHub Repository Manager",
	"description": "Easily and quickly clone your GitHub repositories and create new ones.",
	"author": {
		"name": "Henrique Bruno",
		"email": "henrique.bruno.fa@gmail.com"
	},
	"repository": {
		"url": "https://github.com/SrBrahma/GitHub-Repository-Manager"
	},
	"icon": "images/logo/logo128.png",
	"version": "0.3.6",
	"main": "./dist/extension.js",
	"engines": {
		"vscode": "^1.44.0"
	},
	"categories": [
		"Other",
		"SCM Providers"
	],
	"activationEvents": [
		"*"
	],
	"license": "MIT",
	"keywords": [
		"github",
		"repository",
		"clone",
		"init",
		"oauth"
	],
	"scripts": {
		"vscode:prepublish": "webpack --config webpack/webpack.config.prod.js",
		"publish": "vsce publish",
		"webpack": "webpack --config webpack/webpack.config.dev.js",
		"webpack-dev": "webpack --config webpack/webpack.config.dev.js --watch",
		"test-compile": "tsc -p ./",
		"watch": "npm run webpack-dev",
		"start": "npm run webpack-dev"
	},
	"dependencies": {
		"@octokit/auth-oauth-app": "^3.0.2",
		"@octokit/core": "^2.5.0",
		"@octokit/oauth-app": "^1.1.0",
		"@octokit/rest": "^17.6.0",
		"@types/mz": "^2.7.0",
		"@types/rimraf": "^3.0.0",
		"express": "^4.17.1",
		"mz": "^2.7.0",
		"rimraf": "^3.0.2"
	},
	"devDependencies": {
		"@types/express": "^4.17.6",
		"@types/node": "^13.11.0",
		"@types/vscode": "^1.44.0",
		"@typescript-eslint/eslint-plugin": "^2.26.0",
		"@typescript-eslint/parser": "^2.26.0",
		"clean-webpack-plugin": "^3.0.0",
		"dotenv": "^8.2.0",
		"eslint": "^6.8.0",
		"fork-ts-checker-webpack-plugin": "^4.1.3",
		"prettier": "^2.0.5",
		"ts-loader": "^7.0.2",
		"typescript": "^3.9.3",
		"webpack": "^4.43.0",
		"webpack-cli": "^3.3.11",
		"webpack-merge": "^4.2.2"
	},
	"contributes": {
		"configuration": {
			"title": "GitHub Repository Manager",
			"properties": {
				"githubRepositoryManager.saveToken": {
					"type": "boolean",
					"default": false,
					"description": "By default, when closing the VSCode, your token (OAuth or Personal access token) is forgotten, and on each VSCode opening, you will need to login again to use this extension functionalities. This setting saves the token (OAuth or Personal access token) in an internal file. You must be careful while using this option, as malicious extensions and applications can retrieve the stored token and read and write to your repositories (but not delete). The stored token is removed from the disk when \"Logout and forget token\" is clicked when logged. You can also delete at any time your Personal access token on GitHub website > Settings > Developer settings > Personal access token, and your OAuth under GitHub website > Settings > Applications > Authorized OAuth Apps."
				},
				"githubRepositoryManager.oauthCallbackPort": {
					"type": "number",
					"minimum": 0,
					"maximum": 65535,
					"default": 0,
					"multipleOf": 1,
					"description": "Which port the OAuth should use on successful authentication. \"0\" will use a random port. You usually won't have to change this."
				},
				"githubRepositoryManager.showRepositoryCommandsIcons": {
					"type": "boolean",
					"default": true,
					"description": "When hovering a repository in the tree view, shows some common commands icons for quick use. You may also call them via the right-click menu, being this setting enabled or not. Requires restart after changing to take effect."
				},
				"githubRepositoryManager.clonedRepositoriesSearch.searchOnDefaultCloneDirectory": {
					"type": "boolean",
					"default": true,
					"description": "Search for cloned repos on the \"git.defaultCloneDirectory\" path setting. Only applies if 'git.defaultCloneDirectory' is set."
				},
				"githubRepositoryManager.clonedRepositoriesSearch.defaultCloneDirectoryMaximumDepth": {
					"minimum": 0,
					"default": 3,
					"type": "integer",
					"description": "How deep on \"git.defaultCloneDirectory\" local cloned repositories will be searched. A depth of 0 means it will only search on the directory itself, a depth of 3 means it will search up to 3 directories below."
				},
				"githubRepositoryManager.clonedRepositoriesSearch.directoriesToIgnore": {
					"type": "array",
					"default": [
						"node_modules",
						".vscode"
					],
					"description": "Directories names to not search for repositories in them."
				}
			}
		},
		"viewsContainers": {
			"activitybar": [
				{
					"id": "githubRepoMgr",
					"title": "GitHub Repository Manager",
					"icon": "images/logo/logoVS.png"
				}
			]
		},
		"views": {
			"githubRepoMgr": [
				{
					"id": "githubRepoMgr.views.account",
					"name": "Account"
				},
				{
					"id": "githubRepoMgr.views.repositories",
					"name": "Repositories"
				}
			]
		},
		"commands": [
			{
				"title": "Create Repository",
				"command": "githubRepoMgr.commands.repos.createRepo",
				"icon": "$(repo-create)"
			},
			{
				"title": "Reload Repositories",
				"command": "githubRepoMgr.commands.repos.reload",
				"icon": "$(refresh)"
			},
			{
				"command": "githubRepoMgr.commands.repos.openWebPage",
				"title": "Open GitHub Page",
				"icon": "$(globe)"
			},
			{
				"command": "githubRepoMgr.commands.repos.copyRepositoryUrl",
				"title": "Copy Repository URL"
			},
			{
				"command": "githubRepoMgr.commands.clonedRepos.open",
				"title": "Open"
			},
			{
				"command": "githubRepoMgr.commands.clonedRepos.openInNewWindow",
				"title": "Open in New Window",
				"icon": "$(multiple-windows)"
			},
			{
				"command": "githubRepoMgr.commands.clonedRepos.addToWorkspace",
				"title": "Add to Workspace"
			},
			{
				"command": "githubRepoMgr.commands.clonedRepos.openContainingFolder",
				"title": "Open Containing Folder",
				"icon": "$(symbol-folder)"
			},
			{
				"command": "githubRepoMgr.commands.clonedRepos.copyPath",
				"title": "Copy Path"
			},
			{
				"command": "githubRepoMgr.commands.notClonedRepos.cloneTo",
				"title": "Clone to"
			}
		],
		"menus": {
			"view/title": [
				{
					"command": "githubRepoMgr.commands.repos.createRepo",
					"when": "view == githubRepoMgr.views.repositories",
					"group": "navigation"
				},
				{
					"command": "githubRepoMgr.commands.repos.reload",
					"when": "view == githubRepoMgr.views.repositories",
					"group": "navigation"
				}
			],
			"view/item/context": [
				{
					"command": "githubRepoMgr.commands.repos.openWebPage",
					"when": "viewItem =~ /githubRepoMgr\\.context\\.(not)?clonedRepo/i",
					"group": "9@0"
				},
				{
					"command": "githubRepoMgr.commands.repos.copyRepositoryUrl",
					"when": "viewItem =~ /githubRepoMgr\\.context\\.(not)?clonedRepo/i",
					"group": "9@1"
				},
				{
					"command": "githubRepoMgr.commands.clonedRepos.open",
					"when": "viewItem == githubRepoMgr.context.clonedRepo",
					"group": "0@0"
				},
				{
					"command": "githubRepoMgr.commands.clonedRepos.openInNewWindow",
					"when": "viewItem == githubRepoMgr.context.clonedRepo",
					"group": "0@1"
				},
				{
					"command": "githubRepoMgr.commands.clonedRepos.addToWorkspace",
					"when": "viewItem == githubRepoMgr.context.clonedRepo",
					"group": "0@2"
				},
				{
					"command": "githubRepoMgr.commands.clonedRepos.openContainingFolder",
					"when": "viewItem == githubRepoMgr.context.clonedRepo",
					"group": "1@0"
				},
				{
					"command": "githubRepoMgr.commands.clonedRepos.copyPath",
					"when": "viewItem == githubRepoMgr.context.clonedRepo",
					"group": "1@1"
				},
				{
					"command": "githubRepoMgr.commands.notClonedRepos.cloneTo",
					"when": "viewItem == githubRepoMgr.context.notClonedRepo",
					"group": "0@0"
				},
				{
					"command": "githubRepoMgr.commands.clonedRepos.openInNewWindow",
					"when": "config.githubRepositoryManager.showRepositoryCommandsIcons && viewItem == githubRepoMgr.context.clonedRepo",
					"group": "inline@0"
				},
				{
					"command": "githubRepoMgr.commands.clonedRepos.openContainingFolder",
					"when": "config.githubRepositoryManager.showRepositoryCommandsIcons && viewItem == githubRepoMgr.context.clonedRepo",
					"group": "inline@1"
				},
				{
					"command": "githubRepoMgr.commands.repos.openWebPage",
					"when": "config.githubRepositoryManager.showRepositoryCommandsIcons && viewItem =~ /githubRepoMgr\\.context\\.(not)?clonedRepo/i",
					"group": "inline@5"
				}
			]
		}
	},
	"__metadata": {
		"id": "b4ad9ac6-e595-455b-a28f-d54bbbf07b61",
		"publisherId": "2a569c93-e8e4-413f-9d3c-884206c2d301",
		"publisherDisplayName": "Henrique Bruno"
	}
}